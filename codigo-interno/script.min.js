/* PFA Simulator Web - Build ligero ofuscado (solo lectura) */
(()=>{const h=console.log;class e{constructor(){this.currentStage="config",this.conversationHistory=[],this.patientCharacteristics={},this.providerName="",this.selectedModel="gpt-4o",this.pareDetected=null,this.story="",this.triageEvaluation="";const t=new URLSearchParams(window.location.search);this.demoMode=t.get("demo")==="1",this.apiKeyInput=null,this.apiKeyValid=!1,this.initializeEventListeners(),this.setupSliders(),this.initAPIKeyPersistence()}initializeEventListeners(){this.apiKeyInput=document.getElementById("apiKeyInput"),this.apiKeyInput&&this.apiKeyInput.addEventListener("input",()=>{const t=this.apiKeyInput.value.trim();t&&localStorage.setItem("pfa_api_key",t),this.validateAndMarkAPIKey()});const t=document.getElementById("demoModeToggle");t&&t.addEventListener("change",i=>{this.demoMode=i.target.checked,this.showInfoMessage(this.demoMode?"Modo demo activado: se generarán respuestas simuladas sin usar la API.":"Modo demo desactivado: se usarán respuestas reales (requiere API key).")}),document.getElementById("difficultySlider").addEventListener("input",i=>{document.getElementById("difficultyValue").textContent=i.target.value+"%"}),document.getElementById("randomSimulation").addEventListener("change",i=>{i.target.checked&&this.randomizeSelections()}),document.getElementById("advancedOptionsBtn").addEventListener("click",()=>{this.showModal("advancedOptionsDialog")}),document.getElementById("closeAdvancedOptions").addEventListener("click",()=>{this.hideModal("advancedOptionsDialog")}),document.getElementById("startSimulationBtn").addEventListener("click",()=>{this.startSimulation()}),document.getElementById("randomizePersonality").addEventListener("click",()=>{this.randomizePersonality()}),document.getElementById("acceptCaseBtn").addEventListener("click",()=>{this.acceptCase()}),document.getElementById("sendButton").addEventListener("click",()=>{this.sendMessage()}),document.getElementById("inputText").addEventListener("keypress",i=>{i.key==="Enter"&&!i.shiftKey&&(i.preventDefault(),this.sendMessage())}),document.getElementById("resourcesBtn").addEventListener("click",()=>{this.showModal("resourcesDialog")}),document.getElementById("pareBtn").addEventListener("click",()=>{this.showModal("pareDialog")}),document.getElementById("endConversationBtn").addEventListener("click",()=>{this.endConversation()}),document.getElementById("copyResourcesBtn").addEventListener("click",()=>{this.copySelectedResources()}),document.getElementById("applyResourcesBtn").addEventListener("click",()=>{this.applyResources()}),document.getElementById("uploadMaterialBtn").addEventListener("click",()=>{this.showModal("uploadDialog")}),document.getElementById("cancelUploadBtn").addEventListener("click",()=>{this.hideModal("uploadDialog")}),document.getElementById("confirmUploadBtn").addEventListener("click",()=>{this.uploadFiles()}),this.setupFileUpload(),document.getElementById("confirmPareBtn").addEventListener("click",()=>{this.confirmPareCriteria()}),document.getElementById("cancelPareBtn").addEventListener("click",()=>{this.hideModal("pareDialog")}),document.getElementById("feedbackBtn").addEventListener("click",()=>{this.showFeedback()}),document.getElementById("exportBtn").addEventListener("click",()=>{this.exportConversation()}),document.getElementById("exitBtn").addEventListener("click",()=>{this.exitApplication()}),document.getElementById("nextToPatientBtn").addEventListener("click",()=>{this.switchTab("patient")}),document.getElementById("nextToTechnicalBtn").addEventListener("click",()=>{this.switchTab("technical")}),document.getElementById("showSummaryBtn").addEventListener("click",()=>{this.showSummary()}),document.querySelectorAll(".aspect-slider").forEach(i=>{i.addEventListener("input",s=>{const o=s.target.value,r=s.target.dataset.aspect;s.target.nextElementSibling.textContent=o})}),document.querySelectorAll(".score-slider").forEach(i=>{i.addEventListener("input",s=>{const o=s.target.value;s.target.nextElementSibling.textContent=o})}),document.getElementById("backToFeedbackBtn").addEventListener("click",()=>{this.hideModal("summaryWindow")}),document.getElementById("finishFeedbackBtn").addEventListener("click",()=>{this.finishFeedback()})}initAPIKeyPersistence(){if(!this.apiKeyInput)return;const t=localStorage.getItem("pfa_api_key");t&&t.startsWith("sk-")&&(this.apiKeyInput.value=t,this.validateAndMarkAPIKey());const i=document.getElementById("demoModeToggle");i&&(i.checked=this.demoMode)}validateAndMarkAPIKey(){if(!this.apiKeyInput)return!1;const t=this.apiKeyInput.value.trim(),i=/^sk-[a-zA-Z0-9-_]{10,}/.test(t);this.apiKeyValid=i,this.apiKeyInput.style.border=i?"2px solid #28a745":t?"2px solid #dc3545":"1px solid #ccc";const s=document.getElementById("apiKeyHint");return s&&(t?(i?(s.textContent="Clave válida.",s.style.color="#28a745"):(s.textContent="Formato de clave no reconocido. Debe comenzar con sk-",s.style.color="#dc3545")):(s.textContent="Ingresa tu clave de OpenAI (no se envía a ningún servidor externo, solo a OpenAI).",s.style.color="#666")),i}setupSliders(){document.querySelectorAll(".personality-slider").forEach(t=>{t.addEventListener("input",i=>{const s=i.target.value,o=i.target.dataset.trait;i.target.parentElement.querySelector(".slider-value").textContent=s+"%"})})}showModal(t){document.getElementById(t).classList.add("active")}hideModal(t){document.getElementById(t).classList.remove("active")}randomizeSelections(){document.querySelectorAll("select").forEach(t=>{const i=Math.floor(Math.random()*(t.options.length-1));t.selectedIndex=i}),document.querySelectorAll('input[type="checkbox"]').forEach(t=>{t.checked=Math.random()>.5}),document.querySelectorAll(".personality-slider").forEach(t=>{const i=Math.floor(Math.random()*11)*10;t.value=i,t.parentElement.querySelector(".slider-value").textContent=i+"%"});const t=document.getElementById("difficultySlider"),i=Math.floor(Math.random()*101);t.value=i,document.getElementById("difficultyValue").textContent=i+"%"}randomizePersonality(){document.querySelectorAll(".personality-slider").forEach(t=>{const i=Math.floor(Math.random()*11)*10;t.value=i,t.parentElement.querySelector(".slider-value").textContent=i+"%"})}async startSimulation(){const t=this.getSimulationConfig();if(!t.providerName){alert("Por favor, ingrese su nombre");return}this.providerName=t.providerName,this.patientCharacteristics=t,this.hideModal("simulationConfigWindow"),this.showLoading("Generando simulación...");try{await this.createTraumaStory()}catch(i){console.error("Error al crear la historia:",i),this.hideLoading(),alert("Error al generar la simulación. Por favor, intente nuevamente.")}}getSimulationConfig(){return{providerName:document.getElementById("providerName").value.trim(),difficulty:parseInt(document.getElementById("difficultySlider").value),traumaType:document.getElementById("traumaType").value,traumaSetting:document.getElementById("traumaSetting").value,age:document.getElementById("age").value,gender:document.getElementById("gender").value,challenges:document.getElementById("challenges").value,education:document.getElementById("education").value,civilStatus:document.getElementById("civilStatus").value,network:document.getElementById("network").value,livesWith:this.getCheckedValues("livesWithOptions"),hobbies:this.getCheckedValues("hobbiesOptions"),personalityValues:this.getPersonalityValues(),medicalConditions:document.getElementById("medicalConditions").value,psychiatricConditions:document.getElementById("psychiatricConditions").value,medications:document.getElementById("medications").value}}getCheckedValues(t){const i=document.getElementById(t);return i?Array.from(i.querySelectorAll('input[type="checkbox"]:checked')).map(s=>s.value):[]}getPersonalityValues(){const t={};return document.querySelectorAll(".personality-slider").forEach(i=>{const s=i.dataset.trait;t[s]=parseInt(i.value)}),t}async createTraumaStory(){const t=this.patientCharacteristics,i=this.createScreenwriterPrompt(t);try{const s=await this.callOpenAI(i);this.story=s;const o=this.createTriagePrompt(s),r=await this.callOpenAI(o);this.triageEvaluation=r,this.hideLoading(),this.showTriageWindow(r)}catch(s){throw console.error("Error en la generación:",s),this.hideLoading(),s}}createScreenwriterPrompt(t){const i=new Date,s=new Date(i.getTime()-12096e5);return`Eres un guionista experto en la generación de guiones para simulación médica. Crea una historia realista y detallada de un sobreviviente de trauma. CRÍTICO: El evento traumático DEBE haber ocurrido entre hoy (${i.toISOString().split("T")[0]}) y hace dos semanas (${s.toISOString().split("T")[0]}). Detalles del personaje: Edad: ${t.age} Género: ${t.gender} Tipo de Trauma: ${t.traumaType} Escenario del Trauma: ${t.traumaSetting} Educación: ${t.education} Estado Civil: ${t.civilStatus} Red Social: ${t.network} Vive Con: ${t.livesWith.join(", ")} Hobbies: ${t.hobbies.join(", ")} Rasgos de Personalidad: ${Object.entries(t.personalityValues).map(([o,r])=>`${o}: ${r}%`).join(", ")} Condiciones Médicas: ${t.medicalConditions} Condiciones Psiquiátricas: ${t.psychiatricConditions} Medicamentos: ${t.medications} Desafíos de PFA: ${t.challenges} Incluye reacciones psicológicas típicas peritraumáticas y describe el estado actual del sobreviviente.`}createTriagePrompt(t){return`Eres una enfermera de triage en un servicio telefónico de urgencias. Tu tarea es entregar a un colega un resumen corto, claro y humano del caso. Usa oraciones simples y menciona SOLO: • Motivo de la llamada (qué pasó y dónde) • Estado general del paciente (alerta, inquieto, dolorido…) • Síntoma clave o malestar principal (dolor, miedo, confusión…) NO incluyas saludos ni despedidas. Ve directo al grano con un tono conversacional y profesional. Historia del caso: ${t}`}async callOpenAI(t){if(this.demoMode)return this.generateDemoResponse(t);const i=this.apiKeyInput?this.apiKeyInput.value.trim():"";if(!i)throw new Error("API key no proporcionada. Ingrésala o activa modo demo.");if(!this.validateAndMarkAPIKey())throw new Error("API key con formato inválido.");let s;try{s=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${i}`,"Content-Type":"application/json"},body:JSON.stringify({model:this.selectedModel,messages:[{role:"system",content:"Eres un asistente experto en simulación médica."},{role:"user",content:t}],max_tokens:1e3,temperature:.7})})}catch(o){throw new Error("No se pudo conectar a OpenAI. Revisa tu conexión.")}if(!s.ok){if(s.status===401)throw new Error("Clave API rechazada (401). Verifica que sea correcta y tenga permisos.");if(s.status===429)throw new Error("Límite de uso excedido (429). Intenta más tarde.");throw new Error(`Error de API: ${s.status}`)}const o=await s.json(),r=(o==null?void 0:o.choices)==null?void 0:o.choices[0],a=(r==null?void 0:r.message)==null?void 0:r.message.content;return a||"[Respuesta vacía]"}generateDemoResponse(t){const i=t.length,s=["Esto es una respuesta simulada de demostración para que puedas probar la interfaz sin consumir tu cuota.","El modo demo está activo: ninguna llamada real se hace a OpenAI y los contenidos son genéricos.","Puedes desactivar el modo demo cuando ingreses una API key válida para obtener contenido realista."];return s[i%s.length]}showTriageWindow(t){document.getElementById("triageMessage").innerHTML=t,this.showModal("triageWindow")}acceptCase(){this.hideModal("triageWindow"),this.showModal("simulationWindow"),this.currentStage="survivor";const t=document.getElementById("chatHistory");t.innerHTML='<div class="chat-message system">El superviviente está en línea. Puede comenzar la interacción.</div>',document.getElementById("endConversationBtn").style.display="inline-block"}async sendMessage(){const t=document.getElementById("inputText"),i=t.value.trim();if(!i)return;if(this.currentStage!=="survivor"){alert("La simulación aún no ha comenzado");return}this.addChatMessage(i,"user"),t.value="",this.showLoading("Pensando...");try{const s=this.createSurvivorPrompt(i),o=await this.callOpenAI(s);this.addChatMessage(o,"assistant"),this.checkPARECriteria(o)}catch(s){console.error("Error al generar respuesta:",s),this.addChatMessage("Error al procesar la respuesta. Por favor, intente nuevamente.","system")}finally{this.hideLoading()}}createSurvivorPrompt(t){const i=this.patientCharacteristics;return`Eres un sobreviviente de trauma con el siguiente perfil: Edad: ${i.age} Género: ${i.gender} Tipo de trauma: ${i.traumaType} Escenario del trauma: ${i.traumaSetting} Nivel educativo: ${i.education} Estado civil: ${i.civilStatus} Red social: ${i.network} Vive con: ${i.livesWith.join(", ")} Hobbies: ${i.hobbies.join(", ")} Rasgos de personalidad: ${Object.entries(i.personalityValues).map(([s,o])=>`${s}: ${o}%`).join(", ")} Condiciones médicas: ${i.medicalConditions} Condiciones psiquiátricas: ${i.psychiatricConditions} Medicamentos: ${i.medications} Desafíos de PFA: ${i.challenges} Historia original: ${this.story} Evaluación de triage: ${this.triageEvaluation} Responde de forma auténtica y coherente con tu perfil a este mensaje: ${t} No eres el proveedor de PAP. Responde de forma auténtica y coherente con tu perfil.`}addChatMessage(t,i){const s=document.getElementById("chatHistory"),o=document.createElement("div");o.className=`chat-message ${i}`,o.textContent=t,s.appendChild(o),s.scrollTop=s.scrollHeight,this.conversationHistory.push({role:i==="user"?"user":"assistant",content:t})}checkPARECriteria(t){["quiero morir","suicid","matarme","escucho voces","me persiguen","no soy yo","quiero lastimar","no merezco vivir","no aguanto más","quiero desaparecer"].some(i=>t.toLowerCase().includes(i))&&this.showModal("pareDialog")}confirmPareCriteria(){const t=document.getElementById("pareCriteria").value;this.pareDetected=t,this.hideModal("pareDialog"),alert(`Criterio PARE registrado: ${t}`)}endConversation(){this.hideModal("simulationWindow"),this.showModal("menuWindow")}showFeedback(){this.hideModal("menuWindow"),this.showModal("feedbackWindow"),this.generateAutomatedFeedback()}async generateAutomatedFeedback(){if(!this.conversationHistory.length)return;try{const t=await this.generatePatientFeedback();this.updatePatientFeedback(t);const i=await this.generateTechnicalFeedback();this.updateTechnicalFeedback(i)}catch(t){console.error("Error al generar feedback:",t)}}async generatePatientFeedback(){const t=`Basado en esta conversación, genera un feedback desde la perspectiva del paciente: ${JSON.stringify(this.conversationHistory)} Formato requerido: NIVEL GENERAL DE COMODIDAD: X/5 EMPATÍA: X/5 RESPETO: X/5 CLARIDAD EN LA COMUNICACIÓN: X/5 ATENCIÓN Y ESCUCHA: X/5 SEGURIDAD TRANSMITIDA: X/5 COMENTARIOS DETALLADOS: [Texto libre con la experiencia del paciente]`;return await this.callOpenAI(t)}async generateTechnicalFeedback(){const t=`Evalúa técnicamente esta conversación de primeros auxilios psicológicos: ${JSON.stringify(this.conversationHistory)} Evalúa cada aspecto del protocolo ABCDE: A. Escucha Activa B. Reentrenamiento Respiratorio C. Clasificación de Necesidades D. Derivación a Redes E. Psicoeducación Para cada sección, proporciona: - Evaluación crítica - Ejemplos específicos - Sugerencias de mejora - NIVEL ALCANZADO: X/5`;return await this.callOpenAI(t)}updatePatientFeedback(t){document.getElementById("patientComments").value=t,this.processPatientRatings(t)}processPatientRatings(t){const i={"NIVEL GENERAL DE COMODIDAD":/NIVEL GENERAL DE COMODIDAD:\s*(\d+)\/5/,"EMPATÍA":/EMPATÍA:\s*(\d+)\/5/,RESPETO:/RESPETO:\s*(\d+)\/5/,"CLARIDAD EN LA COMUNICACIÓN":/CLARIDAD EN LA COMUNICACIÓN:\s*(\d+)\/5/,"ATENCIÓN Y ESCUCHA":/ATENCIÓN Y ESCUCHA:\s*(\d+)\/5/,"SEGURIDAD TRANSMITIDA":/SEGURIDAD TRANSMITIDA:\s*(\d+)\/5/};Object.entries(i).forEach(([s,o])=>{const r=t.match(o);if(r){const a=parseInt(r[1]);this.updateAspectRating(s,a)}})}updateAspectRating(t,i){if(t==="NIVEL GENERAL DE COMODIDAD")document.getElementById("treatmentCombo").value=i;else{const s={"EMPATÍA":"Empatía",RESPETO:"Respeto","CLARIDAD EN LA COMUNICACIÓN":"Claridad","ATENCIÓN Y ESCUCHA":"Atención","SEGURIDAD TRANSMITIDA":"Seguridad"}[t];if(s){const o=document.querySelector(`[data-aspect="${s}"]`);o&&(o.value=i,o.nextElementSibling.textContent=i)}}}updateTechnicalFeedback(t){this.populateFeedbackBlocks(t)}populateFeedbackBlocks(t){["A","B","C","D","E"].forEach(i=>{const s=t.indexOf(`${i}. `);if(s!==-1){const o=i==="E"?t.indexOf("NIVEL ALCANZADO:",s):t.indexOf(`${String.fromCharCode(i.charCodeAt(0)+1)}. `,s),r=o!==-1?t.substring(s,o).trim():t.substring(s).trim(),a=document.querySelector(`[data-letter="${i}"] .feedback-text`);a&&(a.textContent=r);const n=r.match(/NIVEL ALCANZADO:\s*(\d+)\/5/);if(n){const c=parseInt(n[1]),l=document.querySelector(`[data-letter="${i}"] .score-slider`),d=document.querySelector(`[data-letter="${i}"] .score-value`);l&&d&&(l.value=c,d.textContent=c)}}});const i=t.indexOf("PAREN");if(i!==-1){const s=t.substring(i),o=document.querySelector('[data-letter="PAREN"] .feedback-text');o&&(o.textContent=s)}}switchTab(t){document.querySelectorAll(".tab-pane").forEach(i=>{i.classList.remove("active")}),document.getElementById(t+"Tab").classList.add("active"),document.querySelectorAll(".tab-btn").forEach(i=>{i.classList.remove("active")}),document.querySelector(`[data-tab="${t}"]`).classList.add("active")}showSummary(){this.hideModal("feedbackWindow"),this.showModal("summaryWindow"),this.createCharts()}createCharts(){this.createPatientChart(),this.createTechnicalChart()}createPatientChart(){const t=document.getElementById("patientChart").getContext("2d"),i={labels:["Empatía","Respeto","Comunicación","Escucha","Seguridad","Comodidad"],datasets:[{label:"Evaluación del Paciente",data:this.getPatientValues(),backgroundColor:"rgba(54, 162, 235, 0.2)",borderColor:"rgba(54, 162, 235, 1)",borderWidth:2}]};new Chart(t,{type:"radar",data:i,options:{scales:{r:{beginAtZero:!0,max:5,ticks:{stepSize:1}}},plugins:{legend:{display:!1}}}})}createTechnicalChart(){const t=document.getElementById("technicalChart").getContext("2d"),i={labels:["Escucha Activa","Reentrenamiento Respiratorio","Clasificación Necesidades","Derivación Redes","Psicoeducación"],datasets:[{label:"Evaluación Técnica",data:this.getTechnicalValues(),backgroundColor:"rgba(255, 99, 132, 0.2)",borderColor:"rgba(255, 99, 132, 1)",borderWidth:2}]};new Chart(t,{type:"radar",data:i,options:{scales:{r:{beginAtZero:!0,max:5,ticks:{stepSize:1}}},plugins:{legend:{display:!1}}}})}getPatientValues(){const t=[];return document.querySelectorAll(".aspect-slider").forEach(i=>{t.push(parseInt(i.value))}),t.push(parseInt(document.getElementById("treatmentCombo").value)),t}getTechnicalValues(){const t=[],i=["A","B","C","D","E"];return i.forEach(s=>{const o=document.querySelector(`[data-letter="${s}"] .score-slider`);o?t.push(parseInt(o.value)):t.push(0)}),t}showLoading(t){document.getElementById("loadingText").textContent=t,document.getElementById("loadingIndicator").classList.remove("hidden")}hideLoading(){document.getElementById("loadingIndicator").classList.add("hidden")}showInfoMessage(t){h("[INFO]",t);const i=document.getElementById("pfaInfoToast");i&&i.remove();const s=document.createElement("div");s.id="pfaInfoToast",s.style.position="fixed",s.style.bottom="16px",s.style.right="16px",s.style.background="#1f2937",s.style.color="#fff",s.style.padding="12px 16px",s.style.borderRadius="8px",s.style.fontSize="14px",s.style.boxShadow="0 4px 16px rgba(0,0,0,0.3)",s.textContent=t,document.body.appendChild(s),setTimeout(()=>{s.remove()},5e3)}showResources(){this.showModal("resourcesDialog")}copySelectedResources(){const t=[];document.querySelectorAll('.resources-list input[type="checkbox"]:checked').forEach(i=>{t.push(i.value)}),t.length>0?navigator.clipboard.writeText(t.join("\n")).then(()=>{alert("Recursos copiados al portapapeles")]):alert("No hay recursos seleccionados")}applyResources(){const t=[];document.querySelectorAll('.resources-list input[type="checkbox"]:checked').forEach(i=>{t.push(i.value)});if(t.length>0){const i=document.getElementById("resourcesList");i.innerHTML=t.map(s=>`<div>• ${s}</div>`).join(""),this.hideModal("resourcesDialog")}else alert("No hay recursos seleccionados")}setupFileUpload(){const t=document.getElementById("uploadDropZone"),i=document.getElementById("fileInput");document.getElementById("selectedFiles");t.addEventListener("click",()=>{i.click()}),i.addEventListener("change",s=>{this.handleFileSelection(s.target.files)}),t.addEventListener("dragover",s=>{s.preventDefault(),t.classList.add("dragover")}),t.addEventListener("dragleave",()=>{t.classList.remove("dragover")}),t.addEventListener("drop",s=>{s.preventDefault(),t.classList.remove("dragover"),this.handleFileSelection(s.dataTransfer.files)})}handleFileSelection(t){const i=document.getElementById("selectedFiles");i.innerHTML="",Array.from(t).forEach(s=>{const o=this.createFileItem(s);i.appendChild(o)}),document.getElementById("fileList").style.display="block"}createFileItem(t){const i=document.createElement("div");i.className="file-item",i.dataset.fileName=t.name;const s=this.getFileIcon(t.type),o=this.formatFileSize(t.size);return i.innerHTML=`<div class="file-info"><div class="file-icon">${s}</div><div class="file-details"><div class="file-name">${t.name}</div><div class="file-size">${o}</div></div></div><button class="file-remove" onclick="this.parentElement.remove()"><i class="fas fa-times"></i></button>`,i}getFileIcon(t){return t.startsWith("image/")?"<i class=\"fas fa-image\"></i>":t.startsWith("video/")?"<i class=\"fas fa-video\"></i>":t.startsWith("audio/")?"<i class=\"fas fa-music\"></i>":t.includes("pdf")?"<i class=\"fas fa-file-pdf\"></i>":t.includes("word")?"<i class=\"fas fa-file-word\"></i>":t.includes("text")?"<i class=\"fas fa-file-alt\"></i>":"<i class=\"fas fa-file\"></i>"}formatFileSize(t){if(t===0)return"0 Bytes";const i=1024,s=["Bytes","KB","MB","GB"],o=Math.floor(Math.log(t)/Math.log(i));return parseFloat((t/Math.pow(i,o)).toFixed(2))+" "+s[o]}uploadFiles(){const t=document.querySelectorAll("#selectedFiles .file-item");if(t.length===0){alert("No hay archivos seleccionados para cargar");return}t.forEach((i,s)=>{setTimeout(()=>{i.classList.add("uploading"),setTimeout(()=>{i.classList.remove("uploading"),i.classList.add("success");const o=i.dataset.fileName,r=document.getElementById("resourcesList"),a=r.innerHTML;r.innerHTML=a+`<div>• 📎 ${o}</div>`,s===t.length-1&&setTimeout(()=>{this.hideModal("uploadDialog"),alert("Archivos cargados exitosamente")},1e3)},1500)},s*500)})}exportConversation(){if(!this.conversationHistory.length){alert("No hay mensajes en la conversación para exportar");return}const t=this.conversationHistory.filter(i=>i.role==="user"||i.role==="assistant").map(i=>`${i.role==="user"?"Usuario":"Sobreviviente"}: ${i.content}`).join("\n\n"),i=new Blob([t],{type:"text/plain;charset=utf-8"}),s=URL.createObjectURL(i),o=document.createElement("a");o.href=s,o.download="conversacion_pfa.txt",o.click(),URL.revokeObjectURL(s),alert("Conversación exportada con éxito")}finishFeedback(){this.hideModal("summaryWindow"),this.hideModal("feedbackWindow"),this.showModal("simulationConfigWindow"),this.conversationHistory=[],this.currentStage="config"}exitApplication(){confirm("¿Está seguro de que desea salir?")&&window.close()}}document.addEventListener("DOMContentLoaded",()=>{window.pfaSimulator=new e});})();